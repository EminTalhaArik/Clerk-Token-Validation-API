name: Deploy API to VDS
on:
  push:
    branches: [ main ]
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Deploy to VDS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VDS_HOST }}
        username: ${{ secrets.VDS_USER }}
        password: ${{ secrets.VDS_PASSWORD }}
        script: |
          set -e
          echo "=== Starting deployment ==="
          
          # Check if directory exists and create if needed
          echo "=== Checking /opt/applications directory ==="
          sudo mkdir -p /opt/applications
          cd /opt/applications
          pwd
          
          # Clone or pull repository
          echo "=== Repository operations ==="
          if [ -d "clerk-token-validation-api" ]; then
            echo "Directory exists, pulling latest changes..."
            cd clerk-token-validation-api
            git pull origin main
          else
            echo "Cloning repository..."
            git clone https://github.com/${{ github.repository }}.git clerk-token-validation-api
            cd clerk-token-validation-api
          fi
          
          echo "=== Current directory and files ==="
          pwd
          ls -la
          
          # Stop and remove existing container
          echo "=== Stopping existing container ==="
          docker stop clerk-token-validation-api || echo "Container was not running"
          docker rm clerk-token-validation-api || echo "Container did not exist"
          docker rmi clerk-token-validation-api || echo "Image did not exist"
          
          # Check and free port 8004 if needed
          echo "=== Checking port 8004 ==="
          PORT_CONTAINER=$(docker ps --filter "publish=8004" --format "{{.Names}}" | head -n 1)
          if [ ! -z "$PORT_CONTAINER" ]; then
            echo "Port 8004 is used by container: $PORT_CONTAINER"
            echo "Stopping container using port 8004..."
            docker stop $PORT_CONTAINER || true
            docker rm $PORT_CONTAINER || true
          fi
          
          # Build new image
          echo "=== Building Docker image ==="
          docker build -t clerk-token-validation-api .
          echo "Image built successfully"
          
          # Check if network exists
          echo "=== Checking Docker network ==="
          docker network ls | grep nginx-network || docker network create nginx-network
          
          # Run new container
          echo "=== Starting new container ==="
          docker run -d \
            --name clerk-token-validation-api \
            --network nginx-network \
            -p 8004:3000 \
            --restart always \
            -e PORT=3000 \
            -e NODE_ENV=production \
            -e CLERK_SECRET_KEY="${{ secrets.CLERK_SECRET_KEY }}" \
            clerk-token-validation-api
          
          echo "=== Container started, checking status ==="
          docker ps -a | grep clerk-token-validation-api
          
          echo "=== Container logs ==="
          docker logs clerk-token-validation-api
          
          echo "=== Deployment completed successfully! ==="
